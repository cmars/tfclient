// Code generated by protoc-gen-go.
// source: tensorflow_serving/apis/model.proto
// DO NOT EDIT!

package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Metadata for an inference request such as the model name and version.
type ModelSpec struct {
	// Required servable name.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Optional version. If unspecified, will use the latest (numerical) version.
	// Typically not needed unless coordinating across multiple models that were
	// co-trained and/or have inter-dependencies on the versions used at inference
	// time.
	Version *google_protobuf.Int64Value `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// A named signature to evaluate. If unspecified, the default signature will
	// be used. Note that only MultiInference will initially support this.
	SignatureName string `protobuf:"bytes,3,opt,name=signature_name,json=signatureName" json:"signature_name,omitempty"`
}

func (m *ModelSpec) Reset()                    { *m = ModelSpec{} }
func (m *ModelSpec) String() string            { return proto.CompactTextString(m) }
func (*ModelSpec) ProtoMessage()               {}
func (*ModelSpec) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ModelSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModelSpec) GetVersion() *google_protobuf.Int64Value {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ModelSpec) GetSignatureName() string {
	if m != nil {
		return m.SignatureName
	}
	return ""
}

func init() {
	proto.RegisterType((*ModelSpec)(nil), "tensorflow.serving.ModelSpec")
}

func init() { proto.RegisterFile("tensorflow_serving/apis/model.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x49, 0xcd, 0x2b,
	0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0x8f, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0xcc, 0x4b, 0xd7, 0x4f,
	0x2c, 0xc8, 0x2c, 0xd6, 0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x42, 0x28, 0xd2, 0x83, 0x2a, 0x92, 0x92, 0x4b, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07,
	0xab, 0x48, 0x2a, 0x4d, 0xd3, 0x2f, 0x2f, 0x4a, 0x2c, 0x28, 0x48, 0x2d, 0x2a, 0x86, 0xe8, 0x51,
	0xaa, 0xe5, 0xe2, 0xf4, 0x05, 0x19, 0x11, 0x5c, 0x90, 0x9a, 0x2c, 0x24, 0xc4, 0xc5, 0x92, 0x97,
	0x98, 0x9b, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0x99, 0x72, 0xb1, 0x97,
	0x01, 0x95, 0x67, 0xe6, 0xe7, 0x49, 0x30, 0x01, 0x85, 0xb9, 0x8d, 0xa4, 0xf5, 0x20, 0x46, 0xea,
	0xc1, 0x8c, 0xd4, 0xf3, 0xcc, 0x2b, 0x31, 0x33, 0x09, 0x4b, 0xcc, 0x29, 0x4d, 0x0d, 0x82, 0xa9,
	0x15, 0x52, 0xe5, 0xe2, 0x2b, 0xce, 0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0x8d, 0x07, 0x1b,
	0xca, 0x0c, 0x36, 0x94, 0x17, 0x2e, 0xea, 0x07, 0x14, 0x74, 0x62, 0xfe, 0xc1, 0xc8, 0x98, 0xc4,
	0x06, 0x36, 0xc9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x70, 0xc7, 0x1e, 0xc1, 0xe5, 0x00, 0x00,
	0x00,
}
