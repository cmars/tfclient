// Code generated by protoc-gen-go.
// source: tensorflow_serving/apis/regression.proto
// DO NOT EDIT!

package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Regression result for a single item
// (tensorflow.Example or tensorflow.InferenceExample.features).
type Regression struct {
	Value float32 `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
}

func (m *Regression) Reset()                    { *m = Regression{} }
func (m *Regression) String() string            { return proto.CompactTextString(m) }
func (*Regression) ProtoMessage()               {}
func (*Regression) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Regression) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// For tensorflow.Example this will contain one result.
// For tensorflow.InferenceExample this will contain one result for each
// InferenceExample::features.
type RegressionResult struct {
	Regressions []*Regression `protobuf:"bytes,1,rep,name=regressions" json:"regressions,omitempty"`
}

func (m *RegressionResult) Reset()                    { *m = RegressionResult{} }
func (m *RegressionResult) String() string            { return proto.CompactTextString(m) }
func (*RegressionResult) ProtoMessage()               {}
func (*RegressionResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *RegressionResult) GetRegressions() []*Regression {
	if m != nil {
		return m.Regressions
	}
	return nil
}

type RegressionRequest struct {
	// Model Specification.
	ModelSpec *ModelSpec `protobuf:"bytes,1,opt,name=model_spec,json=modelSpec" json:"model_spec,omitempty"`
	// Input data.
	Input *Input `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
}

func (m *RegressionRequest) Reset()                    { *m = RegressionRequest{} }
func (m *RegressionRequest) String() string            { return proto.CompactTextString(m) }
func (*RegressionRequest) ProtoMessage()               {}
func (*RegressionRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *RegressionRequest) GetModelSpec() *ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *RegressionRequest) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type RegressionResponse struct {
	Result *RegressionResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *RegressionResponse) Reset()                    { *m = RegressionResponse{} }
func (m *RegressionResponse) String() string            { return proto.CompactTextString(m) }
func (*RegressionResponse) ProtoMessage()               {}
func (*RegressionResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *RegressionResponse) GetResult() *RegressionResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Regression)(nil), "tensorflow.serving.Regression")
	proto.RegisterType((*RegressionResult)(nil), "tensorflow.serving.RegressionResult")
	proto.RegisterType((*RegressionRequest)(nil), "tensorflow.serving.RegressionRequest")
	proto.RegisterType((*RegressionResponse)(nil), "tensorflow.serving.RegressionResponse")
}

func init() { proto.RegisterFile("tensorflow_serving/apis/regression.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x40, 0xe5, 0x56, 0xad, 0xc4, 0x65, 0x01, 0x8b, 0xa1, 0x20, 0x81, 0x90, 0x61, 0xc8, 0x94,
	0x48, 0x65, 0x65, 0x40, 0x6c, 0x0c, 0x2c, 0x86, 0xbd, 0x2a, 0x70, 0x54, 0x91, 0x5c, 0xdb, 0xf8,
	0xec, 0xb2, 0xf3, 0xd5, 0x8c, 0xb8, 0x76, 0x20, 0x41, 0x34, 0xea, 0x96, 0x48, 0xef, 0x9d, 0xdf,
	0x1d, 0x94, 0x1e, 0x35, 0x19, 0xf7, 0xa6, 0xcc, 0xc7, 0x82, 0xd0, 0x6d, 0x1a, 0xbd, 0xaa, 0x97,
	0xb6, 0xa1, 0xda, 0xe1, 0xca, 0x21, 0x51, 0x63, 0x74, 0x65, 0x9d, 0xf1, 0x86, 0xf3, 0x8e, 0xac,
	0x5a, 0xf2, 0xf4, 0x72, 0xc8, 0x6e, 0xb4, 0x0d, 0x3e, 0x8b, 0xc3, 0xd0, 0xda, 0xbc, 0xa2, 0xca,
	0x90, 0x10, 0x00, 0xf2, 0xf7, 0x45, 0x7e, 0x0c, 0x93, 0xcd, 0x52, 0x05, 0x9c, 0xb1, 0x0b, 0x56,
	0x8e, 0x64, 0xfe, 0x11, 0x4f, 0x70, 0xd8, 0x31, 0x12, 0x29, 0x28, 0xcf, 0x6f, 0xa1, 0xe8, 0x4a,
	0x29, 0xf2, 0xe3, 0xb2, 0x98, 0x9f, 0x57, 0xff, 0x5b, 0xab, 0x9e, 0xda, 0x57, 0xc4, 0x27, 0x83,
	0xa3, 0xfe, 0xd8, 0xf7, 0x80, 0xe4, 0xf9, 0x0d, 0x40, 0xca, 0x5b, 0x90, 0xc5, 0x97, 0x94, 0x51,
	0xcc, 0xcf, 0x76, 0x8d, 0x7d, 0xd8, 0x52, 0x8f, 0x11, 0x92, 0x07, 0xeb, 0x9f, 0x4f, 0x5e, 0xc3,
	0x24, 0x5d, 0x60, 0x36, 0x4a, 0xe2, 0xc9, 0x2e, 0xf1, 0x7e, 0x0b, 0xc8, 0xcc, 0x09, 0x09, 0xfc,
	0xcf, 0x6a, 0x36, 0x96, 0x61, 0x8c, 0x98, 0xba, 0xb4, 0x66, 0x1b, 0x70, 0xb5, 0x67, 0xaf, 0xc4,
	0xca, 0xd6, 0xb9, 0x1b, 0x7f, 0x31, 0xf6, 0x3c, 0x4d, 0xe7, 0xbd, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0xe1, 0x57, 0x98, 0xf1, 0xe8, 0x01, 0x00, 0x00,
}
